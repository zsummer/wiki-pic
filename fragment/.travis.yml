language: cpp
script: cmake
sudo: false

matrix:
    include:
        # Clang
        - env: CLANG_VERSION=3.4 BUILD_TYPE=Debug ASAN=on LIBCXX=off
          os: linux
          compiler: clang
          addons: &clang34
            apt:
              packages:
                - g++-4.9
                - valgrind
              sources:
                - ubuntu-toolchain-r-test

        - env: CLANG_VERSION=3.4 BUILD_TYPE=Debug ASAN=on LIBCXX=off CXX11=on
          os: linux
          compiler: clang
          addons: *clang34

        - env: CLANG_VERSION=3.5 BUILD_TYPE=Debug ASAN=on LIBCXX=on
          os: linux
          compiler: clang-3.5
          addons: &clang35
            apt:
              packages:
                - clang-3.5
                - valgrind
              sources:
                - ubuntu-toolchain-r-test
                - llvm-toolchain-precise-3.5

        - env: CLANG_VERSION=3.5 BUILD_TYPE=Debug ASAN=on LIBCXX=off
          os: linux
          compiler: clang-3.5
          addons: *clang35

        - env: CLANG_VERSION=3.7 BUILD_TYPE=Debug ASAN=off LIBCXX=on
          os: linux
          compiler: clang-3.7
          addons: &clang37
            apt:
              packages:
                - clang-3.7
                - valgrind
              sources:
                - ubuntu-toolchain-r-test
                - llvm-toolchain-precise-3.7

        - env: CLANG_VERSION=3.7 BUILD_TYPE=Debug ASAN=off LIBCXX=off
          os: linux
          compiler: clang-3.7
          addons: *clang37

        # Gcc
        - env: GCC_VERSION=4.9 BUILD_TYPE=Debug ASAN=off LIBCXX=off
          os: linux
          compiler: gcc-4.9
          addons: &gcc49
            apt:
              packages:
                - g++-4.9
                - valgrind
              sources:
                - ubuntu-toolchain-r-test

        - env: GCC_VERSION=4.8 BUILD_TYPE=Debug ASAN=off LIBCXX=off
          os: linux
          compiler: gcc-4.8
          addons: &gcc48
            apt:
              packages:
                - g++-4.8
                - valgrind
              sources:
                - ubuntu-toolchain-r-test


        - env: GCC_VERSION=4.7 BUILD_TYPE=Debug ASAN=off LIBCXX=off
          os: linux
          compiler: gcc-4.7
          addons: &gcc47
            apt:
              packages:
                - g++-4.7
                - valgrind
              sources:
                - ubuntu-toolchain-r-test

        - env: GCC_VERSION=4.6 BUILD_TYPE=Debug ASAN=off LIBCXX=off
          os: linux
          compiler: gcc-4.6
          addons: &gcc46
            apt:
              packages:
                - g++-4.6
                - valgrind
              sources:
                - ubuntu-toolchain-r-test

install:
    - export CHECKOUT_PATH=`pwd`;
    - if [ -n "$GCC_VERSION" ]; then export CXX="g++-${GCC_VERSION}" CC="gcc-${GCC_VERSION}"; fi
    - if [ -n "$CLANG_VERSION" ]; then export CXX="clang++-${CLANG_VERSION}" CC="clang-${CLANG_VERSION}"; fi
    - if [[ "$CLANG_VERSION" == "3.4" ]]; then export CXX="/usr/local/clang-3.4/bin/clang++" CC="/usr/local/clang-3.4/bin/clang"; fi
    - export CXXFLAGS="-Wall -Wextra -Werror"
    # Setup deps directory
    - export DEPS_DIR="${TRAVIS_BUILD_DIR}/deps"
    - mkdir ${DEPS_DIR} && cd ${DEPS_DIR}
    - mkdir usr
    - export PATH=${DEPS_DIR}/usr/bin:${PATH}
    # Install cmake
    - CMAKE_URL="http://www.cmake.org/files/v3.3/cmake-3.3.1-Linux-x86_64.tar.gz"
    - travis_retry wget --quiet -O - ${CMAKE_URL} | tar --strip-components=1 -xz -C usr
    # Show compiler info
    - $CXX --version
    - which $CXX
    - $CC --version
    - which $CC
    # Install libc++
    - |
      if [[ "$LIBCXX" == "on" ]]; then
        if [[ "${CLANG_VERSION}" == "3.5" ]]; then LLVM_VERSION="3.5.2"; fi
        if [[ "${CLANG_VERSION}" == "3.6" ]]; then LLVM_VERSION="3.6.2"; fi
        if [[ "${CLANG_VERSION}" == "3.7" ]]; then LLVM_VERSION="3.7.0"; fi
        LLVM_URL="http://llvm.org/releases/${LLVM_VERSION}/llvm-${LLVM_VERSION}.src.tar.xz"
        LIBCXX_URL="http://llvm.org/releases/${LLVM_VERSION}/libcxx-${LLVM_VERSION}.src.tar.xz"
        LIBCXXABI_URL="http://llvm.org/releases/${LLVM_VERSION}/libcxxabi-${LLVM_VERSION}.src.tar.xz"

        mkdir -p llvm llvm/build llvm/projects/libcxx llvm/projects/libcxxabi
        travis_retry wget --quiet -O - ${LLVM_URL} | tar --strip-components=1 -x --xz -C llvm
        travis_retry wget --quiet -O - ${LIBCXX_URL} | tar --strip-components=1 -x --xz -C llvm/projects/libcxx
        travis_retry wget --quiet -O - ${LIBCXXABI_URL} | tar --strip-components=1 -x --xz -C llvm/projects/libcxxabi
        (cd llvm/build && cmake .. -DCMAKE_INSTALL_PREFIX=${DEPS_DIR}/usr)
        (cd llvm/build/projects/libcxx && make install -j2)
        (cd llvm/build/projects/libcxxabi && make install -j2)
        export LDFLAGS="-L${DEPS_DIR}/usr/lib -lc++ -lc++abi"
        export CXXFLAGS="${CXXFLAGS} -stdlib=libc++ -I${DEPS_DIR}/usr/include/c++/v1"
        export LD_LIBRARY_PATH="${LD_LIBRARY_PATH}:${DEPS_DIR}/usr/lib"
      fi
    # Show files that have been installed
    - ls -lR ${DEPS_DIR}/usr

script:
    - cd $CHECKOUT_PATH
    - if [ ! -d build ]; then mkdir build; fi
    - cd build
    - if [[ "$CXX11" == "on" ]]; then export CXXFLAGS="${CXXFLAGS} -std=c++11"; fi
    - if [[ "$ASAN" == "on" ]]; then export CXXFLAGS="${CXXFLAGS} -fsanitize=address,undefined,integer -fno-omit-frame-pointer -fno-sanitize=unsigned-integer-overflow"; fi
    - cmake -DCMAKE_BUILD_TYPE=$BUILD_TYPE ..
    - CTEST_OUTPUT_ON_FAILURE=1 CTEST_PARALLEL_LEVEL=2 make -j2 check VERBOSE=1
    - cd .. && rm -rf build/

